{"version":3,"sources":["components/tester/Tester.tsx"],"names":["Tester","props","_this","Object","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","switchMod","switchItf","itf","requestProperties","properties","map","property","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","filter","scope","requestTemplate","Tree","treeToJson","arrayToTree","requestData","Mock","mock","setState","handleRequest","requests","fetch","concat","serve","id","then","res","json","state","uri","URI","key","removeSearch","setSearch","push","toString","repositoryId","method","url","target","proxy","Promise","all","_ref","_ref2","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","template","schema","data","_Mock$valid","valid","Diff","Assert","nextMatch","match","type","path","actual","expected","result","message","eval","diff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","item","value","console","warn","err","return","updateRequestData","_","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_this2","store","context","params","location","repository","fetching","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","className","_utils__WEBPACK_IMPORTED_MODULE_10__","mod","modules","length","find","interfaces","requestURI","StoreStateRouterLocationURI","_family__WEBPACK_IMPORTED_MODULE_9__","to","href","name","onClick","onSubmit","e","preventDefault","onChange","keys","rel","decodeURI","JSON","stringify","Component","contextTypes","PropTypes","object","isRequired","mapStateToProps","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/18.251926da.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { PropTypes, connect, Link, Mock, URI, StoreStateRouterLocationURI } from '../../family'\r\nimport { Spin, Tree } from '../utils'\r\nimport { serve } from '../../relatives/services/constant'\r\nimport './Tester.css'\r\nimport { RootState } from 'actions/types'\r\n\r\nclass Tester extends Component<any, any> {\r\n  static contextTypes = {\r\n    store: PropTypes.object.isRequired,\r\n  }\r\n  static propTypes = {\r\n    repository: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired,\r\n  }\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      requestData: {},\r\n      template: null,\r\n      schema: null,\r\n      data: null,\r\n      target: serve,\r\n    }\r\n  }\r\n  render() {\r\n    const { store } = this.context\r\n    const { location: { params } }: any = this.props\r\n    let { repository } = this.props\r\n    if (!repository.fetching && !repository.data) { return <div className=\"p100 fontsize-40 text-center\">404</div> }\r\n\r\n    repository = repository.data\r\n    if (!repository.id) { return <Spin /> } // // DONE 2.2 每次获取仓库都显示加载动画不合理，应该只在初始加载时显示动画。\r\n\r\n    const mod = repository && repository.modules && repository.modules.length\r\n      ? (repository.modules.find((item: any) => item.id === +params.mod) || repository.modules[0]) : {}\r\n    const itf = mod.interfaces && mod.interfaces.length\r\n      ? (mod.interfaces.find((item: any) => item.id === +params.itf) || mod.interfaces[0]) : {}\r\n    // let properties = itf.properties || []\r\n\r\n    const { requestData } = this.state\r\n    const requestURI = URI(`${serve}/app/mock/data/${itf.id}`)\r\n    for (const key in requestData) {\r\n      if (requestData[key] === '') { requestURI.removeSearch(key) } else { requestURI.setSearch(key, requestData[key]) }\r\n    }\r\n    const uri = StoreStateRouterLocationURI(store).removeSearch('itf')\r\n    return (\r\n      <section className=\"Tester\">\r\n        <div className=\"header\">\r\n          <div className=\"card-mods clearfix\">\r\n            <div className=\"card-title\">模块：</div>\r\n            <ul className=\"clearfix\">\r\n              {repository.modules.map((item: any) =>\r\n                <li key={item.id} className={item.id === mod.id ? 'active' : ''}>\r\n                  <Link to={uri.setSearch('mod', item.id).href()}>{item.name}</Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"card-itfs clearfix\">\r\n            <div className=\"card-title\">接口：</div>\r\n            <ul className=\"clearfix\">\r\n              {mod.interfaces.map((item: any) =>\r\n                <li key={item.id} className={item.id === itf.id ? 'active' : ''}>\r\n                  <Link to={uri.setSearch('mod', mod.id).setSearch('itf', item.id).href()} onClick={() => this.switchItf(item)}>{item.name}</Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"card-props clearfix\">\r\n            <form onSubmit={e => { e.preventDefault(); this.handleRequest(itf) }}>\r\n              <div className=\"mb6 ml6 font-bold\">业务系统：</div>\r\n              <input value={this.state.target} onChange={e => this.setState({ target: e.target.value })} className=\"form-control\" />\r\n              <ul className=\"fields clearfix\">\r\n                {Object.keys(requestData).map(key =>\r\n                  <li key={key} className=\"filed\">\r\n                    <div className=\"label\">{key}</div>\r\n                    <input value={requestData[key]} onChange={e => this.updateRequestData(e, key, e.target.value)} className=\"form-control\" />\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              <button className=\"btn btn-success\" type=\"submit\">Submit</button>\r\n            </form>\r\n          </div>\r\n          <div className=\"card-result\">\r\n            <div className=\"card-title\">\r\n              <Link to={requestURI.href()} target=\"_blank\" rel=\"noopener noreferrer\">{decodeURI(requestURI.href())}</Link>\r\n            </div>\r\n            <div>\r\n              <pre>{JSON.stringify(this.state.data, null, 2)}</pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n  switchMod = () => {\r\n    // this.setState({ mod })\r\n  }\r\n  switchItf = (itf: any) => {\r\n    const requestProperties = itf.properties.map((property: any) => ({ ...property })).filter((property: any) => property.scope === 'request')\r\n    const requestTemplate = Tree.treeToJson(Tree.arrayToTree(requestProperties))\r\n    const requestData = Mock.mock(requestTemplate)\r\n    this.setState({ requestData }, () => {\r\n      this.handleRequest(itf)\r\n    })\r\n  }\r\n  handleRequest = (itf: any) => {\r\n    const requests = [\r\n      fetch(`${serve}/app/mock/template/${itf.id}`).then(res => res.json()),\r\n      fetch(`${serve}/app/mock/schema/${itf.id}`).then(res => res.json()),\r\n    ]\r\n\r\n    const { requestData } = this.state\r\n    const uri = URI(`${serve}/app/mock/data/${itf.id}`)\r\n    for (const key in requestData) {\r\n      if (requestData[key] === '') { uri.removeSearch(key) } else { uri.setSearch(key, requestData[key]) }\r\n    }\r\n    requests.push(\r\n      fetch(uri.toString()).then(res => res.json())\r\n    )\r\n\r\n    const { repositoryId, method, url } = itf\r\n    const target = `${this.state.target}/app/mock/${repositoryId}/${method}/${url}`\r\n    const proxy = `${serve}/proxy?target=${target}`\r\n    requests.push(\r\n      fetch(proxy).then(res => res.json())\r\n    )\r\n\r\n    Promise.all(requests).then(([template, schema, data, target]) => {\r\n      this.setState({ template, schema, data })\r\n\r\n      const { Diff, Assert } = Mock.valid\r\n      const nextMatch = Assert.match\r\n      Assert.match = (type: any, path: any, actual: any, expected: any, result: any, message: any) => {\r\n        if (typeof expected === 'string') { expected = eval('(' + expected + ')') } // eslint-disable-line no-eval\r\n        nextMatch(type, path, actual, expected, result, message)\r\n      }\r\n      const result = Diff.diff(schema, target)\r\n      for (const item of result) {\r\n        console.warn(Assert.message(item))\r\n      }\r\n    })\r\n  }\r\n  updateRequestData = (_: any, key: string, value: any) => {\r\n    this.setState({\r\n      requestData: { ...this.state.requestData, [key]: value },\r\n    })\r\n  }\r\n}\r\n// 容器组件\r\nconst mapStateToProps = (state: RootState) => ({\r\n  repository: state.repository,\r\n})\r\nconst mapDispatchToProps = ({})\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tester)\r\n"],"sourceRoot":""}