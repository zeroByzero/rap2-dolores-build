{"version":3,"sources":["components/repository/RepositoryForm.tsx","components/utils/RadioList.tsx","components/repository/Repository.tsx","components/repository/RepositoryList.tsx","components/repository/ImportRepositoryForm.tsx","components/repository/RepositoryListParts.tsx","components/organization/OrganizationRepositoryList.tsx"],"names":["mockRepository","name","description","members","ownerId","undefined","organizationId","collaboratorIds","RepositoryForm","props","_this","Object","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","rparsley","handleSubmit","e","preventDefault","isValid","_this$props","addRepository","updateRepository","onAddOrUpdateRepository","state","id","organization","repository","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","memberIds","map","user","_this$state","owner","newOwner","rmodal","context","close","resolve","collaborators","item","_this2","auth","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","title","_utils__WEBPACK_IMPORTED_MODULE_10__","ref","onSubmit","value","limit","onChange","users","setState","fullname","target","placeholder","spellCheck","autoComplete","autoFocus","required","data-parsley-trigger","data-parsley-maxlength","rows","join","split","react_icons_go__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","type","variant","color","style","marginRight","onClick","reposition","Component","contextTypes","PropTypes","object","isRequired","mapDispatchToProps","connect","RadioList","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","curVal","that","react__WEBPACK_IMPORTED_MODULE_5___default","data","key","disabled","checked","data-log","handleChange","label","Repository","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleDeleteRepository","router","replace","message","concat","window","confirm","deleteRepository","_router$location","location","pathname","hash","search","handleUpdate","_this$props$router$lo","update","_this$props2","editor","react_default","Card","index_esm","family","to","href","serve","rel","find","utils","when","onClose","onResolve","moment","updatedAt","fromNow","RepositoryList","repositories","length","repository_Repository","ImportRepositoryForm","disableSubmit","docUrl","orgId","importRepository","res","isOk","console","log","version","Button","fetchRepositoryList","onAddRepository","onUpdateRepository","onDeleteRepository","CreateButton","callback","_useState","useState","_useState2","slicedToArray","creating","setCreating","_useState3","_useState4","importing","setImporting","dispatch","useDispatch","useSelector","uri","StoreStateRouterLocationURI","components_repository_ImportRepositoryForm","RepositoriesTypeDropdown","url","Select","push","MenuItem","SearchGroup","_useState5","_useState6","query","setQuery","useEffect","TextField","trim","onKeyUp","which","URI","removeSearch","setSearch","handleSearch","width","RepositoryListWithSpin","_ref","fetching","repository_RepositoryList","OrganizationRepositoryListWithSpin","_ref2","PaginationWithLocation","_Component","apply","arguments","inherits","createClass","calculated","OrganizationRepositoryList","_utils__WEBPACK_IMPORTED_MODULE_8__","isOwned","isJoined","_repository_RepositoryListParts__WEBPACK_IMPORTED_MODULE_7__","params","pagination"],"mappings":"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","file":"static/js/9.401a09a5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { mock } from 'mockjs'\r\nimport { SmartTextarea, MembersInput, RParsley } from '../utils'\r\nimport { GoInfo } from 'react-icons/go'\r\nimport { RootState } from 'actions/types'\r\nimport { Button } from '@material-ui/core'\r\nimport { updateRepository, addRepository } from 'actions/repository'\r\n\r\n// 模拟数据\r\n// DONE 2.1 各种表单的初始值混乱，待重构\r\nconst mockRepository = process.env.NODE_ENV === 'development'\r\n  ? () => mock({\r\n    name: '仓库@CTITLE(6)',\r\n    description: '@CPARAGRAPH',\r\n    members: [],\r\n    ownerId: undefined,\r\n    organizationId: undefined,\r\n    collaboratorIds: [],\r\n  })\r\n  : () => ({\r\n    name: '',\r\n    description: '',\r\n    members: [],\r\n    ownerId: undefined,\r\n    organizationId: undefined,\r\n    collaboratorIds: [],\r\n  })\r\n\r\nclass RepositoryForm extends Component<any, any> {\r\n  static contextTypes = {\r\n    rmodal: PropTypes.object.isRequired,\r\n  }\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    organization: PropTypes.object,\r\n    repository: PropTypes.object,\r\n  }\r\n  rparsley: any\r\n  constructor(props: any) {\r\n    super(props)\r\n    const { repository } = props\r\n    this.state = repository ? {\r\n      ...repository,\r\n      collaboratorIds: repository.collaborators.map((item: any) => item.id),\r\n      newOwner: repository.owner,\r\n    } : mockRepository()\r\n  }\r\n  render() {\r\n    const { rmodal } = this.context\r\n    const { auth } = this.props\r\n    return (\r\n      <section className=\"RepositoryForm\">\r\n        <div className=\"rmodal-header\">\r\n          <span className=\"rmodal-title\">{this.props.title}</span>\r\n        </div>\r\n        <RParsley ref={rparsley => { this.rparsley = rparsley }}>\r\n          <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\r\n            <div className=\"rmodal-body\">\r\n              {this.state.id &&\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-2 control-label\">拥有者：</label>\r\n                  <div className=\"col-sm-10\">\r\n                    {this.state.owner && (this.state.owner.id === auth.id)\r\n                      ? <MembersInput\r\n                        value={this.state.newOwner ? [this.state.newOwner] : []}\r\n                        limit={1}\r\n                        onChange={(users: any) => this.setState({ newOwner: users[0] })}\r\n                      />\r\n                      : <div className=\"pt7 pl9\">{this.state.owner.fullname}</div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              }\r\n              {/* <div className='form-group row'>\r\n                <label className='col-sm-2 control-label'>权限</label>\r\n                <div className='col-sm-10'>\r\n                  <RadioList data={FORM.RADIO_LIST_DATA_VISIBILITY} curVal={this.state.visibility} name='visibility'\r\n                    onChange={visibility => this.setState({ visibility })} />\r\n                </div>\r\n              </div> */}\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 control-label\">名称：</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={e => this.setState({ name: e.target.value })}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Name\"\r\n                    spellCheck={false}\r\n                    autoComplete=\"off\"\r\n                    autoFocus={true}\r\n                    required={true}\r\n                    data-parsley-trigger=\"change keyup\"\r\n                    data-parsley-maxlength=\"256\"\r\n                  />{/* w280 */}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 control-label\">简介：</label>\r\n                <div className=\"col-sm-10\">\r\n                  <SmartTextarea\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={(e: any) => this.setState({ description: e.target.value })}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Description\"\r\n                    spellCheck={false}\r\n                    rows=\"5\"\r\n                    data-parsley-trigger=\"change keyup\"\r\n                    data-parsley-maxlength=\"1024\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 control-label\">成员：</label>\r\n                <div className=\"col-sm-10\">\r\n                  <MembersInput value={this.state.members} onChange={(members: any) => this.setState({ members })} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                {/* DONE 2.1 帮助信息：仓库 ID 用逗号分隔，例如 1,2,3 */}\r\n                <label className=\"col-sm-2 control-label\">协同仓库：</label>\r\n                <div className=\"col-sm-10\">\r\n                  {/* TODO 2.2 CollaboratorsInput */}\r\n                  <input\r\n                    name=\"name\"\r\n                    value={this.state.collaboratorIds.join(',')}\r\n                    onChange={e => this.setState({ collaboratorIds: e.target.value.split(',') })}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Collaborator Ids\"\r\n                    spellCheck={false}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <div className=\"mt6 color-9\">\r\n                    <GoInfo className=\"mr3\" />\r\n                    指定与哪些仓库共享接口，仓库 ID 之间用逗号分隔，例如 <code>1,2,3</code>。</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"rmodal-footer\">\r\n              <div className=\"form-group row mb0\">\r\n                <label className=\"col-sm-2 control-label\" />\r\n                <div className=\"col-sm-10\">\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ marginRight: 8 }}>提交</Button>\r\n                  <Button onClick={e => { e.preventDefault(); rmodal.close() }} variant=\"contained\">取消</Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </RParsley>\r\n      </section>\r\n    )\r\n  }\r\n  componentDidUpdate() {\r\n    this.context.rmodal.reposition()\r\n  }\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    if (!this.rparsley.isValid()) { return }\r\n    const { addRepository, updateRepository } = this.props\r\n    const onAddOrUpdateRepository = this.state.id ? updateRepository : addRepository\r\n    const { organization } = this.props\r\n    const repository: any = {\r\n      ...this.state,\r\n      organizationId: organization ? organization.id : null,\r\n      memberIds: (this.state.members || []).map((user: any) => user.id),\r\n    }\r\n    const { owner, newOwner } = this.state\r\n    if (newOwner && newOwner.id !== owner.id) { repository.ownerId = newOwner.id }\r\n    const { rmodal } = this.context\r\n    rmodal.close()\r\n    onAddOrUpdateRepository(repository, () => {\r\n      if (rmodal) { rmodal.resolve() }\r\n    })\r\n  }\r\n}\r\n\r\n// 容器组件\r\nconst mapStateToProps = (state: RootState) => ({\r\n  auth: state.auth,\r\n})\r\nconst mapDispatchToProps = ({\r\n  updateRepository,\r\n  addRepository,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RepositoryForm)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './RadioList.css'\r\n\r\n/**\r\n *\r\n * @param {*} props  { label : [String], value : [String] }\r\n */\r\n\r\nclass RadioList extends Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = { curVal: props.curVal }\r\n  }\r\n\r\n  handleChange(e: any) {\r\n    if (e.target.value !== this.state.curVal) {\r\n      this.setState({ curVal: e.target.value })\r\n      this.props.onChange && this.props.onChange(e.target.value)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // tslint:disable-next-line: no-this-assignment\r\n    const that = this\r\n    return (\r\n      <div className=\"ctl-radio-list\">\r\n        {\r\n          this.props.data.map((item: any) =>\r\n            <label className=\"label mr8\" key={item.value}>\r\n              <input\r\n                className=\"input\"\r\n                type=\"radio\"\r\n                name={that.props.name}\r\n                value={item.value}\r\n                disabled={that.props.disabled}\r\n                checked={this.state.curVal + '' === item.value + ''}\r\n                data-log={typeof this.state.curVal + '|' + typeof item.value}\r\n                onChange={e => that.handleChange(e)}\r\n              />\r\n              {item.label}\r\n            </label>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({})\r\nconst mapDispatchToProps = ({})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RadioList)\r\n","import React, { Component } from 'react'\r\nimport { connect, Link, replace, moment } from '../../family'\r\nimport { RModal } from '../utils'\r\nimport { serve } from '../../relatives/services/constant'\r\nimport RepositoryForm from './RepositoryForm'\r\nimport { GoRepo, GoPencil, GoPlug, GoTrashcan, GoPerson, GoOrganization } from 'react-icons/go'\r\nimport { RouterState } from 'connected-react-router'\r\nimport { RootState } from 'actions/types'\r\nimport { Card } from '@material-ui/core'\r\nimport { deleteRepository } from 'actions/repository'\r\n// DONE 2.1 iconfont => octicons\r\n\r\ninterface Props {\r\n  auth: any\r\n  repository: any\r\n  editor: any\r\n  router: RouterState\r\n  deleteRepository: typeof deleteRepository\r\n  replace: typeof replace\r\n}\r\n\r\ninterface IStates {\r\n  update: boolean\r\n}\r\n\r\nclass Repository extends Component<Props, IStates> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = { update: false }\r\n  }\r\n  render() {\r\n    const { auth, repository, editor, router } = this.props\r\n    const { location } = router\r\n    return (\r\n      <Card className=\"Repository card\">\r\n        <div className=\"card-block\">\r\n          <div className=\"name\">\r\n            <GoRepo className=\"mr6 color-9\" />\r\n            <Link to={`${editor}?id=${repository.id}`}>{repository.name}</Link>\r\n          </div>\r\n          <div className=\"desc\">\r\n            {repository.description}\r\n          </div>\r\n          {/* TODO 2.x 成员列表参考 ProductHunt，仓库成员不怎么重要，暂时不现实 */}\r\n          {/* <div className='members'>\r\n            {repository.members.map(user =>\r\n              <img key={user.id} alt={user.id} title={user.fullname} src={`https://work.alibaba-inc.com/photo/${user.id}.220x220.jpg`} className='avatar' />\r\n            )}\r\n          </div> */}\r\n          <div className=\"toolbar\">\r\n            <a href={`${serve}/app/plugin/${repository.id}`} target=\"_blank\" rel=\"noopener noreferrer\"><GoPlug /></a>\r\n            {/* 编辑权限：拥有者或者成员 */}\r\n            {repository.owner.id === auth.id || repository.members.find((item: any) => item.id === auth.id)\r\n              ? <span className=\"fake-link\" onClick={() => this.setState({ update: true })}><GoPencil /></span>\r\n              : null\r\n            }\r\n            <RModal when={this.state.update} onClose={() => this.setState({ update: false })} onResolve={this.handleUpdate}>\r\n              <RepositoryForm title=\"编辑仓库\" repository={repository} />\r\n            </RModal>\r\n            {/* 删除权限：个人仓库 */}\r\n            {repository.owner.id === auth.id\r\n              ? <Link to={location.pathname + location.search} onClick={this.handleDeleteRepository}><GoTrashcan /></Link>\r\n              : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"card-block card-footer\">\r\n          {repository.organization\r\n            ? <span className=\"ownername\"><GoOrganization /> {repository.organization.name}</span>\r\n            : <span className=\"ownername\"><GoPerson /> {repository.owner.fullname}</span>\r\n          }\r\n          <span className=\"fromnow\">{moment(repository.updatedAt).fromNow()}更新</span>\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n  handleDeleteRepository = (e: any) => {\r\n    e.preventDefault()\r\n    const { repository, router, replace } = this.props\r\n    const message = `仓库被删除后不可恢复，并且会删除相关的模块和接口！\\n确认继续删除『#${repository.id} ${repository.name}』吗？`\r\n    if (window.confirm(message)) {\r\n      const { deleteRepository } = this.props\r\n      deleteRepository(repository.id)\r\n      const { pathname, hash, search } = router.location\r\n      replace(pathname + hash + search)\r\n    }\r\n  }\r\n  handleUpdate = () => {\r\n    const { pathname, hash, search } = this.props.router.location\r\n    this.props.replace(pathname + search + hash)\r\n  }\r\n}\r\n\r\n// 容器组件\r\nconst mapStateToProps = (state: RootState) => ({\r\n  auth: state.auth,\r\n  router: state.router,\r\n})\r\nconst mapDispatchToProps = ({\r\n  deleteRepository,\r\n  replace,\r\n})\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Repository)\r\n","import React, { Component } from 'react'\r\nimport { PropTypes } from '../../family'\r\nimport Repository from './Repository'\r\n\r\nclass RepositoryList extends Component<any, any> {\r\n  static propTypes = {\r\n    name: PropTypes.string, // 搜索仓库\r\n    repositories: PropTypes.array.isRequired, // 仓库列表\r\n    editor: PropTypes.string.isRequired, // 仓库编辑器地址\r\n  }\r\n  render() {\r\n    const { name, repositories, editor } = this.props\r\n    if (!repositories.length) {\r\n      return name\r\n        ? <div className=\"fontsize-14 text-center p40\">没有找到匹配 <strong>{name}</strong> 的仓库。</div>\r\n        : <div className=\"fontsize-14 text-center p40\">没有数据。</div>\r\n    }\r\n    return (\r\n      <div className=\"RepositoryList row\">\r\n        {repositories.map((repository: any) =>\r\n          <div key={repository.id} className=\"col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\">\r\n            <Repository repository={repository} editor={editor} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RepositoryList\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport RadioList from '../utils/RadioList'\r\nimport './ImportRepositoryForm.css'\r\nimport { importRepository, fetchRepositoryList } from '../../actions/repository'\r\nimport { Button } from '@material-ui/core'\r\n\r\nclass ImportRepositoryForm extends Component<any, any> {\r\n  static contextTypes = {\r\n    rmodal: PropTypes.object.isRequired,\r\n  }\r\n  static propTypes = {\r\n    orgId: PropTypes.number.isRequired,\r\n    importRepository: PropTypes.func.isRequired,\r\n  }\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      orgId: props.orgId,\r\n      version: 1,\r\n      docUrl: '',\r\n      disableSubmit: false,\r\n    }\r\n  }\r\n  render() {\r\n    const { rmodal } = this.context\r\n    const { disableSubmit } = this.state\r\n    return (\r\n      <section className=\"ImportRepositoryForm\">\r\n        <div className=\"rmodal-header\">\r\n          <span className=\"rmodal-title\">{this.props.title}</span>\r\n        </div>\r\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\r\n          <div className=\"rmodal-body\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 control-label\">版本</label>\r\n              <div className=\"col-sm-10\">\r\n                <RadioList\r\n                  data={[{ 'label': 'RAP1', 'value': 1 }]}\r\n                  curVal={this.state.version}\r\n                  name=\"version\"\r\n                  disabled={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 control-label\">文档URL</label>\r\n                <div className=\"col-sm-10\">\r\n                  <input\r\n                    name=\"projectId\"\r\n                    value={this.state.docUrl}\r\n                    onChange={e => this.setState({ docUrl: e.target.value })}\r\n                    className=\"form-control\"\r\n                    placeholder=\"http://rapapi.org/workspace/myWorkspace.do?projectId=145#2548\"\r\n                    spellCheck={false}\r\n                    autoFocus={true}\r\n                    required={true}\r\n                    data-parsley-maxlength=\"256\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row mb0\">\r\n                <label className=\"col-sm-2 control-label\" />\r\n                <div className=\"col-sm-10\">\r\n                  <Button\r\n                    type=\"submit\"\r\n                    id=\"btnSubmitImportRAP\"\r\n                    disabled={disableSubmit}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginRight: 8 }}\r\n                  >{disableSubmit ? '导入中，请稍等...' : '提交'}\r\n                  </Button>\r\n                  <Button onClick={() => rmodal.close()}>取消</Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n  componentDidUpdate() {\r\n    this.context.rmodal.reposition()\r\n  }\r\n  handleSubmit = (e: any) => {\r\n    this.setState({\r\n      disableSubmit: true,\r\n    })\r\n    e.preventDefault()\r\n    const { docUrl, orgId } = this.state\r\n    this.props.importRepository({ docUrl, orgId }, (res: any) => {\r\n      this.setState({\r\n        disableSubmit: false,\r\n      })\r\n      if (res.isOk) {\r\n        this.context.rmodal.resolve()\r\n      } else {\r\n        console.log(res.message)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = ({\r\n  importRepository,\r\n  fetchRepositoryList,\r\n})\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ImportRepositoryForm)\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport { PropTypes, push, replace, URI, StoreStateRouterLocationURI } from '../../family'\r\nimport { Spin, RModal, Pagination } from '../utils'\r\n\r\nimport RepositoryList from './RepositoryList'\r\nimport RepositoryForm from './RepositoryForm'\r\nimport ImportRepositoryForm from './ImportRepositoryForm'\r\nimport { addRepository, updateRepository, deleteRepository } from '../../actions/repository'\r\n\r\nimport { GoArrowRight } from 'react-icons/go'\r\nimport { Organization, RootState } from 'actions/types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Select, MenuItem, TextField, Button } from '@material-ui/core'\r\n\r\nexport const mapDispatchToProps = ({\r\n  onAddRepository: addRepository,\r\n  onUpdateRepository: updateRepository,\r\n  onDeleteRepository: deleteRepository,\r\n})\r\n\r\ninterface CreateButtonProps {\r\n  organization?: Organization\r\n  callback?: string\r\n}\r\n\r\nexport function CreateButton(props: CreateButtonProps) {\r\n  const { organization, callback } = props\r\n  const [creating, setCreating] = useState(false)\r\n  const [importing, setImporting] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const router = useSelector((state: RootState) => state.router)\r\n  const handleUpdate = () => {\r\n    if (callback) {\r\n      dispatch(replace(callback))\r\n    } else {\r\n      const uri = StoreStateRouterLocationURI(router)\r\n      dispatch(replace(uri.href()))\r\n    }\r\n  }\r\n  return (\r\n    <span className=\"float-right ml10\">\r\n      {/* DONE 2.1 √我加入的仓库、X所有仓库 是否应该有 新建仓库 */}\r\n      <Button className=\"RepositoryCreateButton\" variant=\"contained\" color=\"primary\" onClick={() => setCreating(true)}> 新建仓库 </Button>\r\n      {organization &&\r\n        <button className=\"RepositoryCreateButton btn btn-secondary ml8\" onClick={() => setImporting(true)}>\r\n          <GoArrowRight /> 导入仓库\r\n          </button>\r\n      }\r\n      <RModal when={creating} onClose={() => setCreating(false)} onResolve={handleUpdate}>\r\n        <RepositoryForm title=\"新建仓库\" organization={organization} />\r\n      </RModal>\r\n      {organization &&\r\n        <RModal when={importing && !!organization} onClose={() => setImporting(false)} onResolve={handleUpdate}>\r\n          <ImportRepositoryForm title=\"导入仓库\" orgId={organization.id} />\r\n        </RModal>\r\n      }\r\n    </span>\r\n  )\r\n}\r\n\r\n// TODO 2.2 <select> => <Dropdown>\r\nexport function RepositoriesTypeDropdown(props: { url: string }) {\r\n  const { url } = props\r\n  const dispatch = useDispatch()\r\n  const handlePush = (url: string) => {\r\n    dispatch(push(url))\r\n  }\r\n  return (\r\n    <Select\r\n      className=\"mr8\"\r\n      value={url}\r\n      onChange={e => handlePush(e.target.value as string)}\r\n    >\r\n      <MenuItem value=\"/repository/joined\">我的仓库</MenuItem>\r\n      <MenuItem value=\"/repository/all\">所有仓库</MenuItem>\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport function SearchGroup(props: { name: string }) {\r\n  const { name } = props\r\n  const dispatch = useDispatch()\r\n  const router = useSelector((state: RootState) => state.router)\r\n  const [query, setQuery] = useState('')\r\n  const handleSearch = () => {\r\n    const { pathname, hash, search } = router.location\r\n    const uri = URI(pathname + hash + search).removeSearch('cursor')\r\n    query ? uri.setSearch('name', query) : uri.removeSearch('name')\r\n    dispatch(push(uri.href()))\r\n  }\r\n  useEffect(() => {\r\n    setQuery(name)\r\n  }, [name])\r\n  return (\r\n    <TextField\r\n      value={query || ''}\r\n      placeholder=\"搜索仓库：名称、ID\"\r\n      autoComplete=\"off\"\r\n      onChange={e => setQuery(e.target.value.trim())}\r\n      onKeyUp={e => e.which === 13 && handleSearch()}\r\n      style={{ width: 200 }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const RepositoryListWithSpin = ({ name, repositories }: any) => (\r\n  repositories.fetching\r\n    ? <Spin />\r\n    : <RepositoryList name={name} repositories={repositories.data} editor=\"/repository/editor\" />\r\n)\r\n\r\nexport const OrganizationRepositoryListWithSpin = ({ name, repositories }: any) => (\r\n  repositories.fetching\r\n    ? <Spin />\r\n    : <RepositoryList name={name} repositories={repositories.data} editor=\"/organization/repository/editor\" />\r\n)\r\n\r\nexport class PaginationWithLocation extends Component<any, any> {\r\n  static contextTypes = {\r\n    location: PropTypes.object,\r\n  }\r\n  render() {\r\n    const { calculated } = this.props\r\n    const { location } = this.context\r\n    return <Pagination location={location} calculated={calculated} />\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CreateButton, SearchGroup, mapDispatchToProps, OrganizationRepositoryListWithSpin, PaginationWithLocation } from '../repository/RepositoryListParts'\r\nimport { Spin } from '../utils'\r\nimport '../repository/Repository.css'\r\nimport { RootState } from 'actions/types'\r\n\r\n// 展示组件\r\nclass OrganizationRepositoryList extends Component<any, any> {\r\n  render() {\r\n    const { location, auth, organization, repositories } = this.props\r\n    if (!organization || !organization.id) { return <Spin /> }\r\n\r\n    const isOwned = organization.owner.id === auth.id\r\n    const isJoined = organization.members.find((item: any) => item.id === auth.id)\r\n    return (\r\n      <section className=\"RepositoryListWrapper\">\r\n        <div className=\"header\"><span className=\"title\">{organization.name}</span></div>\r\n        <nav className=\"toolbar clearfix\">\r\n          {isOwned || isJoined\r\n            ? <CreateButton organization={organization} />\r\n            : null\r\n          }\r\n          <SearchGroup name={location.params.name} />\r\n        </nav>\r\n        <div className=\"body\">\r\n          <OrganizationRepositoryListWithSpin name={location.params.name} repositories={repositories} />\r\n        </div>\r\n        <div className=\"footer\">\r\n          <PaginationWithLocation calculated={repositories.pagination} />\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n// 容器组件\r\nconst mapStateToProps = (state: RootState) => ({\r\n  auth: state.auth,\r\n  organization: state.organization,\r\n  repositories: state.repositories, // TODO => organizationRepositories\r\n})\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OrganizationRepositoryList)\r\n"],"sourceRoot":""}