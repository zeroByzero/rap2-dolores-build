{"version":3,"sources":["components/status/Status.tsx"],"names":["Status","_this$props","this","props","counter","users","organizations","repositories","interfaces","_this$props2","analyticsUsersActivation","analyticsRepositoriesActivation","_this$props3","analyticsRepositoriesCreated","analyticsRepositoriesUpdated","map","item","label","fullname","empId","userId","value","name","repositoryId","dict","version","pagination","total","mock","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_ref","_ref2","Object","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","unit","key","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","_utils___WEBPACK_IMPORTED_MODULE_8__","type","data","adapt","options","list","labels","datasets","backgroundColor","RChart","COLORS","blue","borderColor","borderWidth","fill","Component","connect","state"],"mappings":"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","file":"static/js/17.c443f303.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { RChart } from '../utils/'\r\nimport './Status.css'\r\nimport { Card } from '@material-ui/core'\r\n\r\n// TODO 2.3 仓库曲线 接口曲线\r\n// TODO 2.3 接口覆盖率\r\n// TODO 2.3 接口调用（模拟）曲线\r\n// TODO 2.3 用户曲线\r\n\r\nclass Status extends Component<any, any> {\r\n  static adapt(list: any, label: any) {\r\n    return {\r\n      labels: list.map((item: any) => item.label),\r\n      datasets: [{\r\n        label: label || '-',\r\n        data: list.map((item: any) => item.value),\r\n        backgroundColor: RChart.COLORS.blue,\r\n        borderColor: RChart.COLORS.blue,\r\n        borderWidth: 1,\r\n        fill: false,\r\n      }],\r\n    }\r\n  }\r\n  render() {\r\n    const { counter, users, organizations, repositories, interfaces } = this.props\r\n    let { analyticsUsersActivation, analyticsRepositoriesActivation } = this.props\r\n    const { analyticsRepositoriesCreated, analyticsRepositoriesUpdated } = this.props\r\n    // analyticsRepositoriesCreated = analyticsRepositoriesCreated.map((item, index, array) => ({\r\n    //   label: item.label,\r\n    //   value: array.slice(0, index + 1).reduce((sum, item) => {\r\n    //     return sum + item.value\r\n    //   }, 0)\r\n    // })) // 不需要累积\r\n    analyticsUsersActivation = analyticsUsersActivation.map((item: any) => ({\r\n      label: item.fullname || item.empId || item.userId,\r\n      value: item.value,\r\n    }))\r\n    analyticsRepositoriesActivation = analyticsRepositoriesActivation.map((item: any) => ({\r\n      label: item.name || item.repositoryId,\r\n      value: item.value,\r\n    }))\r\n    const dict = [\r\n      ['版本', counter.version, ''],\r\n      ['用户', users.pagination.total, '人'],\r\n      ['模拟', counter.mock, '次'],\r\n      ['团队', organizations.pagination.total, '个'],\r\n      ['仓库', repositories.pagination.total, '个'],\r\n      ['接口', interfaces.pagination.total, '个'],\r\n    ]\r\n    return (\r\n      <article className=\"Status\">\r\n        {/* <div className='header'><span className='title'>分析和报告</span></div> */}\r\n        <div className=\"body\">\r\n          <div className=\"row mb20\">\r\n            {dict.map(([name, value, unit]) =>\r\n              <div key={name}>\r\n                <Card className=\"card\">\r\n                  <div className=\"card-block\">\r\n                    <div className=\"card-title name\">{name}</div>\r\n                    <div>\r\n                      <span className=\"value techfont\">{value}</span>\r\n                      <span className=\"unit\">{unit}</span>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"row\">\r\n            <Card className=\"chart\">\r\n              <div className=\"header\"><span className=\"title\">最近 30 天新建仓库数</span></div>\r\n              <RChart type=\"line\" data={Status.adapt(analyticsRepositoriesCreated, '新建仓库数')} options={{}} />\r\n            </Card>\r\n            <Card className=\"chart\">\r\n              <div className=\"header\"><span className=\"title\">最近 30 天活跃仓库数</span></div>\r\n              <RChart type=\"line\" data={Status.adapt(analyticsRepositoriesUpdated, '活跃仓库数')} options={{}} />\r\n            </Card>\r\n            <Card className=\"chart\">\r\n              <div className=\"header\"><span className=\"title\">最近 30 天活跃用户排行</span></div>\r\n              <RChart type=\"horizontalBar\" data={Status.adapt(analyticsUsersActivation, '操作')} options={{}} />\r\n            </Card>\r\n            <Card className=\"chart\">\r\n              <div className=\"header\"><span className=\"title\">最近 30 天活跃仓库排行</span></div>\r\n              <RChart type=\"horizontalBar\" data={Status.adapt(analyticsRepositoriesActivation, '操作')} options={{}} />\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  counter: state.counter,\r\n  users: state.users,\r\n  organizations: state.organizations,\r\n  repositories: state.repositories,\r\n  interfaces: state.interfaces,\r\n  analyticsRepositoriesCreated: state.analyticsRepositoriesCreated.data,\r\n  analyticsRepositoriesUpdated: state.analyticsRepositoriesUpdated.data,\r\n  analyticsUsersActivation: state.analyticsUsersActivation.data,\r\n  analyticsRepositoriesActivation: state.analyticsRepositoriesActivation.data,\r\n})\r\nconst mapDispatchToProps = ({})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Status)\r\n"],"sourceRoot":""}