{"version":3,"sources":["components/checker/Checker.tsx"],"names":["Checker","props","_this","Object","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","switchMod","e","mod","preventDefault","setState","switchItf","itf","handleRequest","_this$state$itf","state","repositoryId","method","url","target","concat","proxy","serve","requests","fetch","id","then","res","json","Promise","all","_ref","_ref2","D_project_workspace_frontend_rap2_dolores_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","schema","data","_ref3","Mock","valid","Diff","Assert","nextMatch","match","type","path","actual","expected","result","message","eval","diff","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","i","value","console","warn","err","return","_this2","repository","fetching","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_utils__WEBPACK_IMPORTED_MODULE_8__","modules","interfaces","className","map","item","_family__WEBPACK_IMPORTED_MODULE_7__","key","to","onClick","name","onChange","JSON","stringify","nextProps","_this3","Component","mapStateToProps","auth","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/16.9e921a05.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n// eslint-disable-next-line\r\nimport { connect, Link } from '../../family'\r\nimport { Spin } from '../utils'\r\nimport { serve } from '../../relatives/services/constant'\r\nimport Mock from 'mockjs'\r\nimport './Checker.css'\r\nimport { RootState } from 'actions/types'\r\ntype CheckerProps = {\r\n  store: object;\r\n  repository: any;\r\n}\r\ntype CheckerState = {\r\n  result?: any;\r\n  itf?: any;\r\n  mod: any;\r\n  target: any\r\n}\r\nclass Checker extends Component<CheckerProps, CheckerState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      mod: null,\r\n      itf: null,\r\n      target: serve,\r\n    }\r\n  }\r\n  render() {\r\n    let { repository } = this.props\r\n    if (repository.fetching) { return <Spin /> }\r\n    repository = repository.data\r\n    const mod = this.state.mod || repository.modules[0]\r\n    const itf = this.state.itf || mod.interfaces[0]\r\n    return (\r\n      <section className=\"Checker\">\r\n        <div className=\"card-mods clearfix\">\r\n          <span className=\"card-title\">模块：</span>\r\n          {repository.modules.map((item: any) => (\r\n            <Link key={item.id} to=\"\" onClick={e => this.switchMod(e, item)} className={item.id === mod.id ? 'active' : ''}>\r\n              {item.name}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <div className=\"card-itfs clearfix\">\r\n          <span className=\"card-title\">接口：</span>\r\n          {mod.interfaces.map((item: any) => (\r\n            <Link key={item.id} to=\"\" onClick={e => this.switchItf(e, item)} className={item.id === itf.id ? 'active' : ''}>\r\n              {item.name}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <input value={this.state.target} onChange={e => this.setState({ target: e.target.value })} className=\"form-control\" />\r\n        </div>\r\n        <div className=\"card-result\">\r\n          <div className=\"card-title\">{`${serve}/app/mock/data/${itf.id}`}</div>\r\n          <pre>{JSON.stringify(this.state.result, null, 2)}</pre>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n  componentWillReceiveProps(nextProps: any) {\r\n    let { repository } = nextProps\r\n    repository = repository.data\r\n    if (!repository.id) { return }\r\n    const mod = this.state.mod || repository.modules[0]\r\n    const itf = this.state.itf || mod.interfaces[0]\r\n    fetch(`${serve}/app/mock/data/${itf.id}`)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ result: json })\r\n      })\r\n  }\r\n  switchMod = (e: any, mod: any) => {\r\n    e.preventDefault()\r\n    this.setState({ mod })\r\n  };\r\n  switchItf = (e: any, itf: any) => {\r\n    e.preventDefault()\r\n    this.setState({ itf }, () => {\r\n      this.handleRequest()\r\n    })\r\n  };\r\n  handleRequest = () => {\r\n    const { repositoryId, method, url } = this.state.itf\r\n    const target = `${this.state.target}/app/mock/${repositoryId}/${method}/${url}`\r\n    const proxy = `${serve}/proxy?target=${target}`\r\n    const requests = [fetch(`${serve}/app/mock/schema/${this.state.itf.id}`).then(res => res.json()), fetch(proxy).then(res => res.json())]\r\n    Promise.all(requests).then(([schema, data]) => {\r\n      const { Diff, Assert } = Mock.valid as any\r\n      const nextMatch = Assert.match\r\n      Assert.match = (type: any, path: any, actual: any, expected: any, result: any, message: any) => {\r\n        // eslint-disable-next-line\r\n        if (typeof expected === 'string') { expected = eval('(' + expected + ')') }\r\n        nextMatch(type, path, actual, expected, result, message)\r\n      }\r\n      const result = Diff.diff(schema, data)\r\n      for (const i of result) {\r\n        console.warn(Assert.message(i))\r\n      }\r\n    })\r\n  };\r\n}\r\n// 容器组件\r\nconst mapStateToProps = (state: RootState) => ({\r\n  auth: state.auth,\r\n  repository: state.repository,\r\n})\r\nconst mapDispatchToProps = {}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checker)\r\n"],"sourceRoot":""}